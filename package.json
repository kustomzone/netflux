{
  "name": "netflux",
  "description": "Abstract peer to peer client transport API. Implementations based on WebRTC and webSocket to be done.",
  "main": "dist/netflux.es2015.umd.js",
  "jsnext:main": "dist/netflux.es2015.js",
  "version": "0.0.0-semrelease",
  "scripts": {
    "prebuild": "rm -rf coverage dist",
    "build": "rollup -c & rollup -i src/index.js -o dist/netflux.es2015.js",
    "signalling-up": "kill `cat /tmp/sigver.pid`; node ./node_modules/sigver/server.js & echo \"$!\" > /tmp/sigver.pid",
    "botserverandnodekey": "rollup -i test/BotServerAndNodeKey.js -o test/Rollupped_node_browser.js && kill `cat /tmp/nodekey.pid`; node ./test/Rollupped_node_browser.js & echo \"$!\" > /tmp/nodekey.pid",
    "pretest": "npm run build && npm run signalling-up && npm run botserverandnodekey",
    "test": "karma start",
    "testin": "npm run test -- --browsers",
    "test-coverage": "npm run test -- karma.conf.coverage.js",
    "nodetest": "rm -rf spec && jasmine init && npm run signalling-up && npm run botserverandnodekey && rollup -i test/service/channelBuilder/webRTCService.test.js -o spec/service/channelBuilder/webRTCServiceSpec.js && rollup -i test/service/channelBuilder/channelBuilder.test.js -o spec/service/channelBuilder/channelBuilderSpec.js && rollup -i test/service/channelBuilder/webSocketService.test.js -o spec/service/channelBuilder/webSocketServiceSpec.js && rollup -i test/service/service.test.js -o spec/service/serviceSpec.js && rollup -i test/functional/fullyConnected/dataType.test.js -o spec/functional/fullyConnected/dataTypeSpec.js && rollup -i test/functional/fullyConnected/manyPeers.test.js -o spec/functional/fullyConnected/manyPeersSpec.js && rollup -i test/functional/fullyConnected/scadsOfLittleData.test.js -o spec/functional/fullyConnected/scadsOfLittleDataSpec.js && rollup -c node.rollup.config.js -i test/functional/fullyConnected/largeData.test.js -o spec/functional/fullyConnected/largeDataSpec.js && rollup -i test/functional/fullyConnected/2peers.test.js -o spec/zfunctional/fullyConnected/2peersSpec.js && jasmine",
    "test-rollup": "npm run signalling-up && rm -rf spec && jasmine init && rollup -i test/functional/fullyConnected/3peers.test.js -o spec/functional/fullyConnected/3peersSpec.js && jasmine",
    "doc": "jsdoc -d doc -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "postdoc": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "docdev": "jsdoc -d doc -p -c jsdoc.json -t ./node_modules/ink-docstrap/template -R README.md -r src",
    "postdocdev": "mkdir -p doc/doc && cp -f doc/uml.png doc/doc/",
    "predocdeploy": "json -I -f jsdoc.json -e \"this.templates.systemName=\\\"Netflux `git describe --abbrev=0 --tags`\\\"\" && npm run docdev",
    "docdeploy": "./jsdoc.deploy.sh",
    "postdocdeploy": "json -I -f jsdoc.json -e 'this.templates.systemName=\"Netflux\"'",
    "commit": "git-cz",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coast-team/netflux.git"
  },
  "keywords": [
    "netflux",
    "webRTC",
    "p2p",
    "peer",
    "network"
  ],
  "author": "Philippe Kalitine <philippe.kalitine@gmail.com> (http://philippe.kalitine.name/)",
  "license": "AGPL-3.0",
  "bugs": {
    "url": "https://github.com/coast-team/netflux/issues"
  },
  "homepage": "https://github.com/coast-team/netflux#readme",
  "config": {
    "ghooks": {
      "pre-commit": "npm run test-coverage"
    },
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "text-encoding": "^0.6.0",
    "webrtc-adapter": "^1.1.0",
    "wrtc": "0.0.60",
    "ws": "^1.1.1"
  },
  "devDependencies": {
    "commitizen": "^2.4.6",
    "cz-conventional-changelog": "^1.1.5",
    "eslint": "^2.13.1",
    "ghooks": "^1.0.1",
    "ink-docstrap": "^1.1.2",
    "istanbul": "^0.4.3",
    "jasmine": "^2.4.1",
    "jasmine-core": "^2.4.1",
    "jsdoc": "^3.4.0",
    "json": "^9.0.3",
    "karma": "^1.1.0",
    "karma-chrome-launcher": "^1.0.1",
    "karma-coverage": "^1.0.0",
    "karma-coverage-es6": "^0.2.7",
    "karma-firefox-launcher": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "karma-rollup-preprocessor": "^2.0.2",
    "karma-sauce-launcher": "^1.0.0",
    "rollup": "^0.33.0",
    "rollup-plugin-filesize": "^0.4.4",
    "rollup-plugin-istanbul": "^1.0.0",
    "rollup-plugin-string": "^2.0.2",
    "sauce-connect": "^0.1.1",
    "semantic-release": "^4.3.5",
    "sigver": "^7.1.0",
    "standard": "^7.0.1"
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "netflux",
      "describe",
      "xdescribe",
      "it",
      "xit",
      "expect",
      "beforeEach",
      "afterEach",
      "beforeAll",
      "afterAll",
      "DOMException",
      "RTCPeerConnection",
      "RTCSessionDescription",
      "RTCDataChannel",
      "RTCIceCandidate",
      "WebSocket",
      "TextEncoder",
      "TextDecoder",
      "Event",
      "CloseEvent"
    ],
    "ignore": [
      "dist/*",
      "karma*.js",
      "*config.js"
    ]
  }
}
